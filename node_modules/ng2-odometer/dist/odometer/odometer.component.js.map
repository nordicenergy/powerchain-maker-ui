{"version":3,"file":"odometer.component.js","sourceRoot":"","sources":["../../src/odometer/odometer.component.ts"],"names":[],"mappings":"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","sourcesContent":["///<reference path=\"odometer.d.ts\" />\n\n/**\n * Created by Jose Andres on 6.15.17\n */\n\nimport * as _ from 'lodash';\nimport { Component, ViewEncapsulation, Input, OnInit, OnDestroy, OnChanges, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { OdometerModel } from './odometer.model';\nimport { Ng2OdometerConfig, Ng2OdometerConfigModel } from './odometer.config';\nimport {\n    CAR_THEME,\n    DEFAULT_THEME,\n    DIGITAL_THEME,\n    MINIMAL_THEME,\n    PLAZA_THEME,\n    SLOT_MACHINE_THEME,\n    TRAIN_STATION_THEME,\n } from './themes';\n\n// HubSpot's Oodometer\n// https://github.com/HubSpot/odometer\nconst Odometer = require('odometer');\n\n@Component({\n    selector: 'ng2-odometer',\n    encapsulation: ViewEncapsulation.None,\n    styles: [\n        CAR_THEME,\n        DEFAULT_THEME,\n        DIGITAL_THEME,\n        MINIMAL_THEME,\n        PLAZA_THEME,\n        SLOT_MACHINE_THEME,\n        TRAIN_STATION_THEME,\n        `\n            .odometer,\n            .odometer-inside,\n            .odometer-digit,\n            .odometer-digit-spacer,\n            .odometer-digit-inner,\n            .odometer-ribbon,\n            .odometer-ribbon-inner,\n            .odometer-value,\n            .odometer-formatting-mark {\n                color: inherit;\n                font-size: inherit;\n                font-family: inherit;\n            }\n        `,\n    ],\n    template: `<div #container></div>`\n})\nexport class Ng2OdometerComponent implements OnInit, OnDestroy, OnChanges, AfterViewInit {\n    private subscription: Subscription;\n    private odometer: OdometerModel;\n    @ViewChild('container', { read: ElementRef }) container: ElementRef;\n    @Input() number: number; // Required\n    @Input() config: Ng2OdometerConfigModel = {};\n    @Input() observable: Observable<boolean> = undefined;\n\n    // Individual configuration attributes\n    @Input() animation: string = undefined;\n    @Input() format: string = undefined;\n    @Input() theme: string = undefined;\n    @Input() value: number = undefined;\n    @Input() duration: number = undefined;\n    @Input() auto: boolean = undefined;\n\n    // Available themes\n    private themes: Array<string> = [\n        'car',\n        'default',\n        'digital',\n        'minimal',\n        'plaza',\n        'slot-machine',\n        'train-station'\n    ];\n\n    // Start Odometer\n    private initOdometer() {\n        if (!_.isUndefined(this.container)\n            && typeof Odometer !== 'undefined') {\n\n            this.odometer = new Odometer({\n                el: this.container.nativeElement,\n                animation: this.config.animation,\n                value: this.config.value,\n                duration: this.config.duration,\n                format: this.config.format,\n                theme: this.config.theme,\n            });\n\n            if (!_.isUndefined(this.number) && this.config.auto) {\n                this.odometer.update(this.number);\n            }\n        }\n    }\n\n    private initConfig() {\n        this.config = _.defaults(this.config, new Ng2OdometerConfig());\n\n        // Animation\n        if (!_.isUndefined(this.animation)) {\n            this.config.animation = this.animation;\n        }\n\n        // Format\n        if (!_.isUndefined(this.format)) {\n            this.config.format = this.format;\n        }\n\n        // Theme\n        if (!_.isUndefined(this.theme)) {\n            this.config.theme = !_.includes(this.themes, this.theme) ? 'default' : this.theme;\n        }\n\n        // Value\n        if (!_.isUndefined(this.value)) {\n            this.config.value = this.value;\n        }\n\n        // Duration\n        if (!_.isUndefined(this.duration)) {\n            this.config.duration = this.duration;\n        }\n\n        // Auto\n        if (!_.isUndefined(this.auto)) {\n            this.config.auto = this.auto;\n        }\n\n        // Validate theme. If not part of the\n        // available themes array, use the default\n        if (!_.includes(this.themes, this.config.theme)) {\n            this.config.theme = 'default';\n        }\n    }\n\n    // ***************************************\n    //  LIFECYCLES\n    // ***************************************\n\n    public ngOnInit() {\n\n        // Bind Observable\n        if (!_.isUndefined(this.observable) && !this.config.auto) {\n            this.subscription = this.observable.subscribe((trigger: boolean) => {\n                if (!_.isUndefined(trigger) && trigger) {\n                    this.odometer.update(this.number);\n                }\n            });\n        }\n\n        // Apply defaults and\n        // individual configurations\n        this.initConfig();\n    }\n\n    public ngOnDestroy() {\n        if (!_.isUndefined(this.subscription)) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    public ngOnChanges() {\n        if (!_.isUndefined(this.number) && !_.isUndefined(this.odometer) && this.config.auto) {\n            this.odometer.update(this.number);\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.initOdometer();\n    }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}