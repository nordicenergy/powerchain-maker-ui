{"version":3,"file":"ngx-infinite-scroll.es5.js","sources":["../../ngx-infinite-scroll.ts","../../public_api.ts","../../src/modules/ngx-infinite-scroll.module.ts","../../src/modules/infinite-scroll.directive.ts","../../src/services/scroll-register.ts","../../src/services/scroll-resolver.ts","../../src/services/position-resolver.ts","../../src/services/event-trigger.ts","../../src/services/axis-resolver.ts","../../src/services/ngx-ins-utils.ts"],"sourcesContent":["export * from './public_api';\n","/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport * from './src/ngx-infinite-scroll';\n\n","import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\n\n@NgModule({\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n  imports: [],\n  providers: []\n})\nexport class InfiniteScrollModule { }\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { InfiniteScrollEvent, IInfiniteScrollAction } from '../models';\nimport { hasWindowDefined, inputPropChanged } from '../services/ngx-ins-utils';\nimport { createScroller, InfiniteScrollActions } from '../services/scroll-register';\n\n@Directive({\n  selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n})\nexport class InfiniteScrollDirective\n  implements OnDestroy, OnChanges, AfterViewInit {\n  @Output() scrolled = new EventEmitter<InfiniteScrollEvent>();\n  @Output() scrolledUp = new EventEmitter<InfiniteScrollEvent>();\n\n  @Input() infiniteScrollDistance: number = 2;\n  @Input() infiniteScrollUpDistance: number = 1.5;\n  @Input() infiniteScrollThrottle: number = 150;\n  @Input() infiniteScrollDisabled: boolean = false;\n  @Input() infiniteScrollContainer: any = null;\n  @Input() scrollWindow: boolean = true;\n  @Input() immediateCheck: boolean = false;\n  @Input() horizontal: boolean = false;\n  @Input() alwaysCallback: boolean = false;\n  @Input() fromRoot: boolean = false;\n\n  private disposeScroller: Subscription;\n\n  constructor(private element: ElementRef, private zone: NgZone) { }\n\n  ngAfterViewInit() {\n    if (!this.infiniteScrollDisabled) {\n      this.setup();\n    }\n  }\n\n  ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }: SimpleChanges) {\n    const containerChanged = inputPropChanged(infiniteScrollContainer);\n    const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n    const distanceChanged = inputPropChanged(infiniteScrollDistance);\n    const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n      (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n\n    if (containerChanged || disabledChanged || distanceChanged) {\n      this.destroyScroller();\n      if (shouldSetup) {\n        this.setup();\n      }\n    }\n  }\n\n  setup() {\n    if (hasWindowDefined()) {\n      this.zone.runOutsideAngular(() => {\n        this.disposeScroller = createScroller({\n          fromRoot: this.fromRoot,\n          alwaysCallback: this.alwaysCallback,\n          disable: this.infiniteScrollDisabled,\n          downDistance: this.infiniteScrollDistance,\n          element: this.element,\n          horizontal: this.horizontal,\n          scrollContainer: this.infiniteScrollContainer,\n          scrollWindow: this.scrollWindow,\n          throttle: this.infiniteScrollThrottle,\n          upDistance: this.infiniteScrollUpDistance\n        }).subscribe((payload: any) => this.zone.run(() => this.handleOnScroll(payload)));\n      });\n    }\n  }\n\n  handleOnScroll({ type, payload }: IInfiniteScrollAction) {\n    switch (type) {\n      case InfiniteScrollActions.DOWN:\n        return this.scrolled.emit(payload);\n\n      case InfiniteScrollActions.UP:\n        return this.scrolledUp.emit(payload);\n\n      default:\n        return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyScroller();\n  }\n\n  destroyScroller() {\n    if (this.disposeScroller) {\n      this.disposeScroller.unsubscribe();\n    }\n  }\n}\n","import { ElementRef } from \"@angular/core\";\nimport { Observable } from \"rxjs/Observable\";\nimport { of } from \"rxjs/observable/of\";\nimport { fromEvent } from \"rxjs/observable/fromEvent\";\nimport { map, mergeMap, tap, sampleTime, filter } from \"rxjs/operators\";\n\nimport * as Models from \"../models\";\nimport { AxisResolver } from \"./axis-resolver\";\nimport { shouldTriggerEvents, IScrollConfig } from \"./event-trigger\";\nimport { resolveContainerElement } from \"./ngx-ins-utils\";\nimport { calculatePoints, createResolver } from \"./position-resolver\";\nimport * as ScrollResolver from \"./scroll-resolver\";\n\nexport function createScroller(config: Models.IScroller) {\n  const { scrollContainer, scrollWindow, element, fromRoot } = config;\n  const resolver = createResolver({\n    axis: new AxisResolver(!config.horizontal),\n    windowElement: resolveContainerElement(\n      scrollContainer,\n      scrollWindow,\n      element,\n      fromRoot\n    )\n  });\n  const { totalToScroll: startWithTotal } = calculatePoints(element, resolver);\n  const scrollState: Models.IScrollState = {\n    lastScrollPosition: 0,\n    lastTotalToScroll: 0,\n    totalToScroll: startWithTotal,\n    triggered: {\n      down: 0,\n      up: 0\n    }\n  };\n  const options: Models.IScrollRegisterConfig = {\n    container: resolver.container,\n    throttle: config.throttle\n  };\n  const distance = {\n    up: config.upDistance,\n    down: config.downDistance\n  };\n  return attachScrollEvent(options).pipe(\n    mergeMap((ev: any) => of(calculatePoints(element, resolver))),\n    map((positionStats: Models.IPositionStats) =>\n      toInfiniteScrollParams(\n        scrollState.lastScrollPosition,\n        positionStats,\n        distance\n      )\n    ),\n    tap(({ stats, scrollDown }: Models.IScrollParams) =>\n      ScrollResolver.updateScrollState(\n        scrollState,\n        stats.scrolled,\n        stats.totalToScroll\n      )\n    ),\n    filter(\n      ({ fire, scrollDown, stats: { totalToScroll } }: Models.IScrollParams) =>\n        shouldTriggerEvents(\n          config.alwaysCallback,\n          fire,\n          ScrollResolver.isTriggeredScroll(\n            totalToScroll,\n            scrollState,\n            scrollDown\n          )\n        )\n    ),\n    tap(({ scrollDown, stats: { totalToScroll } }: Models.IScrollParams) => {\n      ScrollResolver.updateTriggeredFlag(\n        totalToScroll,\n        scrollState,\n        true,\n        scrollDown\n      );\n    }),\n    map(toInfiniteScrollAction)\n  );\n}\n\nexport function attachScrollEvent(\n  options: Models.IScrollRegisterConfig\n): Observable<{}> {\n  let obs = fromEvent(options.container, \"scroll\");\n  // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n  // Let's avoid calling the function unless needed.\n  // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n  if (options.throttle) {\n    obs = obs.pipe(sampleTime(options.throttle));\n  }\n  return obs;\n}\n\nexport function toInfiniteScrollParams(\n  lastScrollPosition: number,\n  stats: Models.IPositionStats,\n  distance: Models.IScrollerDistance\n): Models.IScrollParams {\n  const { scrollDown, fire } = ScrollResolver.getScrollStats(\n    lastScrollPosition,\n    stats,\n    distance\n  );\n  return {\n    scrollDown,\n    fire,\n    stats\n  };\n}\n\nexport const InfiniteScrollActions = {\n  DOWN: \"[NGX_ISE] DOWN\",\n  UP: \"[NGX_ISE] UP\"\n};\n\nexport function toInfiniteScrollAction(\n  response: Models.IScrollParams\n): Models.IInfiniteScrollAction {\n  const { scrollDown, stats: { scrolled: currentScrollPosition } } = response;\n  return {\n    type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n    payload: {\n      currentScrollPosition\n    }\n  };\n}\n","import { IPositionStats, IScrollState, IScrollerDistance } from '../models';\n\nexport function shouldFireScrollEvent(\n  container: IPositionStats,\n  distance: IScrollerDistance,\n  scrollingDown: boolean\n) {\n  let remaining: number;\n  let containerBreakpoint: number;\n  const scrolledUntilNow = container.height + container.scrolled;\n  if (scrollingDown) {\n    remaining = (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n    containerBreakpoint = distance.down / 10;\n  } else {\n    remaining = scrolledUntilNow / container.totalToScroll;\n    containerBreakpoint = distance.up / 10;\n  }\n\n  const shouldFireEvent: boolean = remaining <= containerBreakpoint;\n  return shouldFireEvent;\n}\n\nexport function isScrollingDownwards(\n  lastScrollPosition: number,\n  container: IPositionStats\n) {\n  return lastScrollPosition < container.scrolled;\n}\n\nexport function getScrollStats(\n  lastScrollPosition: number,\n  container: IPositionStats,\n  distance: IScrollerDistance\n) {\n  const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n  return {\n    fire: shouldFireScrollEvent(container, distance, scrollDown),\n    scrollDown\n  };\n}\n\nexport function updateScrollPosition(position: number, scrollState: IScrollState) {\n  return (scrollState.lastScrollPosition = position);\n}\n\nexport function updateTotalToScroll(totalToScroll: number, scrollState: IScrollState) {\n  if (scrollState.lastTotalToScroll !== totalToScroll) {\n    scrollState.lastTotalToScroll = scrollState.totalToScroll;\n    scrollState.totalToScroll = totalToScroll;\n  }\n}\n\nexport function isSameTotalToScroll(scrollState: IScrollState) {\n  return scrollState.totalToScroll === scrollState.lastTotalToScroll;\n}\n\nexport function updateTriggeredFlag(scroll, scrollState: IScrollState, triggered: boolean, isScrollingDown: boolean) {\n  if (isScrollingDown) {\n    scrollState.triggered.down = scroll;\n  } else {\n    scrollState.triggered.up = scroll;\n  }\n}\n\nexport function isTriggeredScroll(totalToScroll, scrollState: IScrollState, isScrollingDown: boolean) {\n  return isScrollingDown\n    ? scrollState.triggered.down === totalToScroll\n    : scrollState.triggered.up === totalToScroll;\n}\n\nexport function updateScrollState(\n  scrollState: IScrollState, scrolledUntilNow: number, totalToScroll: number) {\n  updateScrollPosition(scrolledUntilNow, scrollState);\n  updateTotalToScroll(totalToScroll, scrollState);\n  // const isSameTotal = isSameTotalToScroll(scrollState);\n  // if (!isSameTotal) {\n  //   updateTriggeredFlag(scrollState, false, isScrollingDown);\n  // }\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ContainerRef, IPositionElements, IPositionStats, IResolver } from '../models';\nimport { AxisResolver } from './axis-resolver';\n\nexport function createResolver({\n  windowElement,\n  axis\n}: IPositionElements): IResolver {\n  return createResolverWithContainer(\n    { axis, isWindow: isElementWindow(windowElement) },\n    windowElement\n  );\n}\n\nexport function createResolverWithContainer(\n  resolver,\n  windowElement: ContainerRef\n) {\n  const container =\n    resolver.isWindow || (windowElement && !windowElement.nativeElement)\n      ? windowElement\n      : windowElement.nativeElement;\n  return { ...resolver, container };\n}\n\nexport function isElementWindow(windowElement: ContainerRef): boolean {\n  const isWindow = ['Window', 'global'].some((obj: string) =>\n    Object.prototype.toString.call(windowElement).includes(obj)\n  );\n  return isWindow;\n}\n\nexport function getDocumentElement(isContainerWindow: boolean, windowElement) {\n  return isContainerWindow ? windowElement.document.documentElement : null;\n}\n\nexport function calculatePoints(element: ElementRef, resolver: IResolver) {\n  const height = extractHeightForElement(resolver);\n  return resolver.isWindow\n    ? calculatePointsForWindow(height, element, resolver)\n    : calculatePointsForElement(height, element, resolver);\n}\n\nexport function calculatePointsForWindow(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container, isWindow } = resolver;\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  // scrolled until now / current y point\n  const scrolled =\n    height +\n    getElementPageYOffset(\n      getDocumentElement(isWindow, container),\n      axis,\n      isWindow\n    );\n  // total height / most bottom y point\n  const nativeElementHeight = getElementHeight(\n    element.nativeElement,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n  const totalToScroll =\n    getElementOffsetTop(element.nativeElement, axis, isWindow) +\n    nativeElementHeight;\n  return { height, scrolled, totalToScroll };\n}\n\nexport function calculatePointsForElement(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container } = resolver;\n  // perhaps use container.offsetTop instead of 'scrollTop'\n  const scrolled = container[axis.scrollTopKey()];\n  const totalToScroll = container[axis.scrollHeightKey()];\n  return { height, scrolled, totalToScroll };\n}\n\nexport function extractHeightPropKeys(axis: AxisResolver) {\n  return {\n    offsetHeightKey: axis.offsetHeightKey(),\n    clientHeightKey: axis.clientHeightKey()\n  };\n}\n\nexport function extractHeightForElement({\n  container,\n  isWindow,\n  axis\n}: IResolver) {\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  return getElementHeight(\n    container,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n}\nexport function getElementHeight(\n  elem: any,\n  isWindow: boolean,\n  offsetHeightKey: string,\n  clientHeightKey: string\n) {\n  if (isNaN(elem[offsetHeightKey])) {\n    const docElem = getDocumentElement(isWindow, elem);\n    return docElem ? docElem[clientHeightKey] : 0;\n  } else {\n    return elem[offsetHeightKey];\n  }\n}\n\nexport function getElementOffsetTop(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const topKey = axis.topKey();\n  // elem = elem.nativeElement;\n  if (!elem.getBoundingClientRect) {\n    // || elem.css('none')) {\n    return;\n  }\n  return (\n    elem.getBoundingClientRect()[topKey] +\n    getElementPageYOffset(elem, axis, isWindow)\n  );\n}\n\nexport function getElementPageYOffset(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const pageYOffset = axis.pageYOffsetKey();\n  const scrollTop = axis.scrollTopKey();\n  const offsetTop = axis.offsetTopKey();\n\n  if (isNaN(window[pageYOffset])) {\n    return getDocumentElement(isWindow, elem)[scrollTop];\n  } else if (elem.ownerDocument) {\n    return elem.ownerDocument.defaultView[pageYOffset];\n  } else {\n    return elem[offsetTop];\n  }\n}\n","import { InfiniteScrollEvent, IPositionStats } from '../models';\n\nexport interface IScrollerProps {\n  container: IPositionStats;\n  down: number;\n  up: number;\n  alwaysCallback: boolean;\n  disabled: boolean;\n}\n\nexport interface ITriggerEvents {\n  down: (event: any) => any;\n  up: (event: any) => any;\n}\n\nexport interface IDistanceRange {\n  down: number;\n  up: number;\n}\n\nexport interface IScrollConfig {\n  alwaysCallback: boolean;\n  shouldFireScrollEvent: boolean;\n}\n\nexport function shouldTriggerEvents(\n  alwaysCallback: boolean,\n  shouldFireScrollEvent: boolean,\n  isTriggeredCurrentTotal: boolean) {\n  return (alwaysCallback || shouldFireScrollEvent) && !isTriggeredCurrentTotal;\n}\n","const VerticalProps = {\n  clientHeight: \"clientHeight\",\n  offsetHeight: \"offsetHeight\",\n  scrollHeight: \"scrollHeight\",\n  pageYOffset: \"pageYOffset\",\n  offsetTop: \"offsetTop\",\n  scrollTop: \"scrollTop\",\n  top: \"top\"\n};\n\nconst HorizontalProps = {\n  clientHeight: \"clientWidth\",\n  offsetHeight: \"offsetWidth\",\n  scrollHeight: \"scrollWidth\",\n  pageYOffset: \"pageXOffset\",\n  offsetTop: \"offsetLeft\",\n  scrollTop: \"scrollLeft\",\n  top: \"left\"\n};\n\nexport class AxisResolver {\n  private propsMap: any;\n\n  constructor(private vertical: boolean = true) {\n    this.propsMap = vertical ? VerticalProps : HorizontalProps;\n  }\n  clientHeightKey() {\n    return this.propsMap.clientHeight;\n  }\n  offsetHeightKey() {\n    return this.propsMap.offsetHeight;\n  }\n  scrollHeightKey() {\n    return this.propsMap.scrollHeight;\n  }\n  pageYOffsetKey() {\n    return this.propsMap.pageYOffset;\n  }\n  offsetTopKey() {\n    return this.propsMap.offsetTop;\n  }\n  scrollTopKey() {\n    return this.propsMap.scrollTop;\n  }\n  topKey() {\n    return this.propsMap.top;\n  }\n}\n","import * as console from 'console';\nimport { ElementRef, SimpleChange } from '@angular/core';\n\nexport function resolveContainerElement(\n  selector: string | any,\n  scrollWindow,\n  defaultElement,\n  fromRoot: boolean\n): any {\n  const hasWindow = window && !!window.document && window.document.documentElement;\n  let container = hasWindow && scrollWindow ? window : defaultElement;\n  if (selector) {\n    const containerIsString =\n      selector && hasWindow && typeof selector === 'string';\n    container = containerIsString\n      ? findElement(selector, defaultElement.nativeElement, fromRoot)\n      : selector;\n    if (!container) {\n      throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n    }\n  }\n  return container;\n}\n\nexport function findElement(\n  selector: string | any,\n  customRoot: ElementRef | any,\n  fromRoot: boolean\n) {\n  const rootEl = fromRoot ? window.document : customRoot;\n  return rootEl.querySelector(selector);\n}\n\nexport function inputPropChanged(prop: SimpleChange): boolean {\n  return prop && !prop.firstChange;\n}\n\nexport function hasWindowDefined(): boolean {\n  return typeof window !== 'undefined';\n}\n"],"names":["ScrollResolver.updateTriggeredFlag","ScrollResolver.isTriggeredScroll","ScrollResolver.updateScrollState"],"mappings":"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"}