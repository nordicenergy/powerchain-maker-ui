{"version":3,"file":"ngx-infinite-scroll.umd.js","sources":["../../src/modules/ngx-infinite-scroll.module.ts","../../public_api.ts","../../src/modules/infinite-scroll.directive.ts","../../src/services/scroll-register.ts","../../src/services/scroll-resolver.ts","../../src/services/position-resolver.ts","../../src/services/event-trigger.ts","../../src/services/axis-resolver.ts","../../src/services/ngx-ins-utils.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\n\n@NgModule({\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n  imports: [],\n  providers: []\n})\nexport class InfiniteScrollModule { }\n","/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport * from './src/ngx-infinite-scroll';\n\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { InfiniteScrollEvent, IInfiniteScrollAction } from '../models';\nimport { hasWindowDefined, inputPropChanged } from '../services/ngx-ins-utils';\nimport { createScroller, InfiniteScrollActions } from '../services/scroll-register';\n\n@Directive({\n  selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n})\nexport class InfiniteScrollDirective\n  implements OnDestroy, OnChanges, AfterViewInit {\n  @Output() scrolled = new EventEmitter<InfiniteScrollEvent>();\n  @Output() scrolledUp = new EventEmitter<InfiniteScrollEvent>();\n\n  @Input() infiniteScrollDistance: number = 2;\n  @Input() infiniteScrollUpDistance: number = 1.5;\n  @Input() infiniteScrollThrottle: number = 150;\n  @Input() infiniteScrollDisabled: boolean = false;\n  @Input() infiniteScrollContainer: any = null;\n  @Input() scrollWindow: boolean = true;\n  @Input() immediateCheck: boolean = false;\n  @Input() horizontal: boolean = false;\n  @Input() alwaysCallback: boolean = false;\n  @Input() fromRoot: boolean = false;\n\n  private disposeScroller: Subscription;\n\n  constructor(private element: ElementRef, private zone: NgZone) { }\n\n  ngAfterViewInit() {\n    if (!this.infiniteScrollDisabled) {\n      this.setup();\n    }\n  }\n\n  ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }: SimpleChanges) {\n    const containerChanged = inputPropChanged(infiniteScrollContainer);\n    const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n    const distanceChanged = inputPropChanged(infiniteScrollDistance);\n    const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n      (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n\n    if (containerChanged || disabledChanged || distanceChanged) {\n      this.destroyScroller();\n      if (shouldSetup) {\n        this.setup();\n      }\n    }\n  }\n\n  setup() {\n    if (hasWindowDefined()) {\n      this.zone.runOutsideAngular(() => {\n        this.disposeScroller = createScroller({\n          fromRoot: this.fromRoot,\n          alwaysCallback: this.alwaysCallback,\n          disable: this.infiniteScrollDisabled,\n          downDistance: this.infiniteScrollDistance,\n          element: this.element,\n          horizontal: this.horizontal,\n          scrollContainer: this.infiniteScrollContainer,\n          scrollWindow: this.scrollWindow,\n          throttle: this.infiniteScrollThrottle,\n          upDistance: this.infiniteScrollUpDistance\n        }).subscribe((payload: any) => this.zone.run(() => this.handleOnScroll(payload)));\n      });\n    }\n  }\n\n  handleOnScroll({ type, payload }: IInfiniteScrollAction) {\n    switch (type) {\n      case InfiniteScrollActions.DOWN:\n        return this.scrolled.emit(payload);\n\n      case InfiniteScrollActions.UP:\n        return this.scrolledUp.emit(payload);\n\n      default:\n        return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyScroller();\n  }\n\n  destroyScroller() {\n    if (this.disposeScroller) {\n      this.disposeScroller.unsubscribe();\n    }\n  }\n}\n","import { ElementRef } from \"@angular/core\";\nimport { Observable } from \"rxjs/Observable\";\nimport { of } from \"rxjs/observable/of\";\nimport { fromEvent } from \"rxjs/observable/fromEvent\";\nimport { map, mergeMap, tap, sampleTime, filter } from \"rxjs/operators\";\n\nimport * as Models from \"../models\";\nimport { AxisResolver } from \"./axis-resolver\";\nimport { shouldTriggerEvents, IScrollConfig } from \"./event-trigger\";\nimport { resolveContainerElement } from \"./ngx-ins-utils\";\nimport { calculatePoints, createResolver } from \"./position-resolver\";\nimport * as ScrollResolver from \"./scroll-resolver\";\n\nexport function createScroller(config: Models.IScroller) {\n  const { scrollContainer, scrollWindow, element, fromRoot } = config;\n  const resolver = createResolver({\n    axis: new AxisResolver(!config.horizontal),\n    windowElement: resolveContainerElement(\n      scrollContainer,\n      scrollWindow,\n      element,\n      fromRoot\n    )\n  });\n  const { totalToScroll: startWithTotal } = calculatePoints(element, resolver);\n  const scrollState: Models.IScrollState = {\n    lastScrollPosition: 0,\n    lastTotalToScroll: 0,\n    totalToScroll: startWithTotal,\n    triggered: {\n      down: 0,\n      up: 0\n    }\n  };\n  const options: Models.IScrollRegisterConfig = {\n    container: resolver.container,\n    throttle: config.throttle\n  };\n  const distance = {\n    up: config.upDistance,\n    down: config.downDistance\n  };\n  return attachScrollEvent(options).pipe(\n    mergeMap((ev: any) => of(calculatePoints(element, resolver))),\n    map((positionStats: Models.IPositionStats) =>\n      toInfiniteScrollParams(\n        scrollState.lastScrollPosition,\n        positionStats,\n        distance\n      )\n    ),\n    tap(({ stats, scrollDown }: Models.IScrollParams) =>\n      ScrollResolver.updateScrollState(\n        scrollState,\n        stats.scrolled,\n        stats.totalToScroll\n      )\n    ),\n    filter(\n      ({ fire, scrollDown, stats: { totalToScroll } }: Models.IScrollParams) =>\n        shouldTriggerEvents(\n          config.alwaysCallback,\n          fire,\n          ScrollResolver.isTriggeredScroll(\n            totalToScroll,\n            scrollState,\n            scrollDown\n          )\n        )\n    ),\n    tap(({ scrollDown, stats: { totalToScroll } }: Models.IScrollParams) => {\n      ScrollResolver.updateTriggeredFlag(\n        totalToScroll,\n        scrollState,\n        true,\n        scrollDown\n      );\n    }),\n    map(toInfiniteScrollAction)\n  );\n}\n\nexport function attachScrollEvent(\n  options: Models.IScrollRegisterConfig\n): Observable<{}> {\n  let obs = fromEvent(options.container, \"scroll\");\n  // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n  // Let's avoid calling the function unless needed.\n  // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n  if (options.throttle) {\n    obs = obs.pipe(sampleTime(options.throttle));\n  }\n  return obs;\n}\n\nexport function toInfiniteScrollParams(\n  lastScrollPosition: number,\n  stats: Models.IPositionStats,\n  distance: Models.IScrollerDistance\n): Models.IScrollParams {\n  const { scrollDown, fire } = ScrollResolver.getScrollStats(\n    lastScrollPosition,\n    stats,\n    distance\n  );\n  return {\n    scrollDown,\n    fire,\n    stats\n  };\n}\n\nexport const InfiniteScrollActions = {\n  DOWN: \"[NGX_ISE] DOWN\",\n  UP: \"[NGX_ISE] UP\"\n};\n\nexport function toInfiniteScrollAction(\n  response: Models.IScrollParams\n): Models.IInfiniteScrollAction {\n  const { scrollDown, stats: { scrolled: currentScrollPosition } } = response;\n  return {\n    type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n    payload: {\n      currentScrollPosition\n    }\n  };\n}\n","import { IPositionStats, IScrollState, IScrollerDistance } from '../models';\n\nexport function shouldFireScrollEvent(\n  container: IPositionStats,\n  distance: IScrollerDistance,\n  scrollingDown: boolean\n) {\n  let remaining: number;\n  let containerBreakpoint: number;\n  const scrolledUntilNow = container.height + container.scrolled;\n  if (scrollingDown) {\n    remaining = (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n    containerBreakpoint = distance.down / 10;\n  } else {\n    remaining = scrolledUntilNow / container.totalToScroll;\n    containerBreakpoint = distance.up / 10;\n  }\n\n  const shouldFireEvent: boolean = remaining <= containerBreakpoint;\n  return shouldFireEvent;\n}\n\nexport function isScrollingDownwards(\n  lastScrollPosition: number,\n  container: IPositionStats\n) {\n  return lastScrollPosition < container.scrolled;\n}\n\nexport function getScrollStats(\n  lastScrollPosition: number,\n  container: IPositionStats,\n  distance: IScrollerDistance\n) {\n  const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n  return {\n    fire: shouldFireScrollEvent(container, distance, scrollDown),\n    scrollDown\n  };\n}\n\nexport function updateScrollPosition(position: number, scrollState: IScrollState) {\n  return (scrollState.lastScrollPosition = position);\n}\n\nexport function updateTotalToScroll(totalToScroll: number, scrollState: IScrollState) {\n  if (scrollState.lastTotalToScroll !== totalToScroll) {\n    scrollState.lastTotalToScroll = scrollState.totalToScroll;\n    scrollState.totalToScroll = totalToScroll;\n  }\n}\n\nexport function isSameTotalToScroll(scrollState: IScrollState) {\n  return scrollState.totalToScroll === scrollState.lastTotalToScroll;\n}\n\nexport function updateTriggeredFlag(scroll, scrollState: IScrollState, triggered: boolean, isScrollingDown: boolean) {\n  if (isScrollingDown) {\n    scrollState.triggered.down = scroll;\n  } else {\n    scrollState.triggered.up = scroll;\n  }\n}\n\nexport function isTriggeredScroll(totalToScroll, scrollState: IScrollState, isScrollingDown: boolean) {\n  return isScrollingDown\n    ? scrollState.triggered.down === totalToScroll\n    : scrollState.triggered.up === totalToScroll;\n}\n\nexport function updateScrollState(\n  scrollState: IScrollState, scrolledUntilNow: number, totalToScroll: number) {\n  updateScrollPosition(scrolledUntilNow, scrollState);\n  updateTotalToScroll(totalToScroll, scrollState);\n  // const isSameTotal = isSameTotalToScroll(scrollState);\n  // if (!isSameTotal) {\n  //   updateTriggeredFlag(scrollState, false, isScrollingDown);\n  // }\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ContainerRef, IPositionElements, IPositionStats, IResolver } from '../models';\nimport { AxisResolver } from './axis-resolver';\n\nexport function createResolver({\n  windowElement,\n  axis\n}: IPositionElements): IResolver {\n  return createResolverWithContainer(\n    { axis, isWindow: isElementWindow(windowElement) },\n    windowElement\n  );\n}\n\nexport function createResolverWithContainer(\n  resolver,\n  windowElement: ContainerRef\n) {\n  const container =\n    resolver.isWindow || (windowElement && !windowElement.nativeElement)\n      ? windowElement\n      : windowElement.nativeElement;\n  return { ...resolver, container };\n}\n\nexport function isElementWindow(windowElement: ContainerRef): boolean {\n  const isWindow = ['Window', 'global'].some((obj: string) =>\n    Object.prototype.toString.call(windowElement).includes(obj)\n  );\n  return isWindow;\n}\n\nexport function getDocumentElement(isContainerWindow: boolean, windowElement) {\n  return isContainerWindow ? windowElement.document.documentElement : null;\n}\n\nexport function calculatePoints(element: ElementRef, resolver: IResolver) {\n  const height = extractHeightForElement(resolver);\n  return resolver.isWindow\n    ? calculatePointsForWindow(height, element, resolver)\n    : calculatePointsForElement(height, element, resolver);\n}\n\nexport function calculatePointsForWindow(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container, isWindow } = resolver;\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  // scrolled until now / current y point\n  const scrolled =\n    height +\n    getElementPageYOffset(\n      getDocumentElement(isWindow, container),\n      axis,\n      isWindow\n    );\n  // total height / most bottom y point\n  const nativeElementHeight = getElementHeight(\n    element.nativeElement,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n  const totalToScroll =\n    getElementOffsetTop(element.nativeElement, axis, isWindow) +\n    nativeElementHeight;\n  return { height, scrolled, totalToScroll };\n}\n\nexport function calculatePointsForElement(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container } = resolver;\n  // perhaps use container.offsetTop instead of 'scrollTop'\n  const scrolled = container[axis.scrollTopKey()];\n  const totalToScroll = container[axis.scrollHeightKey()];\n  return { height, scrolled, totalToScroll };\n}\n\nexport function extractHeightPropKeys(axis: AxisResolver) {\n  return {\n    offsetHeightKey: axis.offsetHeightKey(),\n    clientHeightKey: axis.clientHeightKey()\n  };\n}\n\nexport function extractHeightForElement({\n  container,\n  isWindow,\n  axis\n}: IResolver) {\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  return getElementHeight(\n    container,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n}\nexport function getElementHeight(\n  elem: any,\n  isWindow: boolean,\n  offsetHeightKey: string,\n  clientHeightKey: string\n) {\n  if (isNaN(elem[offsetHeightKey])) {\n    const docElem = getDocumentElement(isWindow, elem);\n    return docElem ? docElem[clientHeightKey] : 0;\n  } else {\n    return elem[offsetHeightKey];\n  }\n}\n\nexport function getElementOffsetTop(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const topKey = axis.topKey();\n  // elem = elem.nativeElement;\n  if (!elem.getBoundingClientRect) {\n    // || elem.css('none')) {\n    return;\n  }\n  return (\n    elem.getBoundingClientRect()[topKey] +\n    getElementPageYOffset(elem, axis, isWindow)\n  );\n}\n\nexport function getElementPageYOffset(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const pageYOffset = axis.pageYOffsetKey();\n  const scrollTop = axis.scrollTopKey();\n  const offsetTop = axis.offsetTopKey();\n\n  if (isNaN(window[pageYOffset])) {\n    return getDocumentElement(isWindow, elem)[scrollTop];\n  } else if (elem.ownerDocument) {\n    return elem.ownerDocument.defaultView[pageYOffset];\n  } else {\n    return elem[offsetTop];\n  }\n}\n","import { InfiniteScrollEvent, IPositionStats } from '../models';\n\nexport interface IScrollerProps {\n  container: IPositionStats;\n  down: number;\n  up: number;\n  alwaysCallback: boolean;\n  disabled: boolean;\n}\n\nexport interface ITriggerEvents {\n  down: (event: any) => any;\n  up: (event: any) => any;\n}\n\nexport interface IDistanceRange {\n  down: number;\n  up: number;\n}\n\nexport interface IScrollConfig {\n  alwaysCallback: boolean;\n  shouldFireScrollEvent: boolean;\n}\n\nexport function shouldTriggerEvents(\n  alwaysCallback: boolean,\n  shouldFireScrollEvent: boolean,\n  isTriggeredCurrentTotal: boolean) {\n  return (alwaysCallback || shouldFireScrollEvent) && !isTriggeredCurrentTotal;\n}\n","const VerticalProps = {\n  clientHeight: \"clientHeight\",\n  offsetHeight: \"offsetHeight\",\n  scrollHeight: \"scrollHeight\",\n  pageYOffset: \"pageYOffset\",\n  offsetTop: \"offsetTop\",\n  scrollTop: \"scrollTop\",\n  top: \"top\"\n};\n\nconst HorizontalProps = {\n  clientHeight: \"clientWidth\",\n  offsetHeight: \"offsetWidth\",\n  scrollHeight: \"scrollWidth\",\n  pageYOffset: \"pageXOffset\",\n  offsetTop: \"offsetLeft\",\n  scrollTop: \"scrollLeft\",\n  top: \"left\"\n};\n\nexport class AxisResolver {\n  private propsMap: any;\n\n  constructor(private vertical: boolean = true) {\n    this.propsMap = vertical ? VerticalProps : HorizontalProps;\n  }\n  clientHeightKey() {\n    return this.propsMap.clientHeight;\n  }\n  offsetHeightKey() {\n    return this.propsMap.offsetHeight;\n  }\n  scrollHeightKey() {\n    return this.propsMap.scrollHeight;\n  }\n  pageYOffsetKey() {\n    return this.propsMap.pageYOffset;\n  }\n  offsetTopKey() {\n    return this.propsMap.offsetTop;\n  }\n  scrollTopKey() {\n    return this.propsMap.scrollTop;\n  }\n  topKey() {\n    return this.propsMap.top;\n  }\n}\n","import * as console from 'console';\nimport { ElementRef, SimpleChange } from '@angular/core';\n\nexport function resolveContainerElement(\n  selector: string | any,\n  scrollWindow,\n  defaultElement,\n  fromRoot: boolean\n): any {\n  const hasWindow = window && !!window.document && window.document.documentElement;\n  let container = hasWindow && scrollWindow ? window : defaultElement;\n  if (selector) {\n    const containerIsString =\n      selector && hasWindow && typeof selector === 'string';\n    container = containerIsString\n      ? findElement(selector, defaultElement.nativeElement, fromRoot)\n      : selector;\n    if (!container) {\n      throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n    }\n  }\n  return container;\n}\n\nexport function findElement(\n  selector: string | any,\n  customRoot: ElementRef | any,\n  fromRoot: boolean\n) {\n  const rootEl = fromRoot ? window.document : customRoot;\n  return rootEl.querySelector(selector);\n}\n\nexport function inputPropChanged(prop: SimpleChange): boolean {\n  return prop && !prop.firstChange;\n}\n\nexport function hasWindowDefined(): boolean {\n  return typeof window !== 'undefined';\n}\n"],"names":["NgModule","Input","Output","NgZone","ElementRef","Directive","EventEmitter","sampleTime","fromEvent","map","ScrollResolver.updateTriggeredFlag","tap","ScrollResolver.isTriggeredScroll","filter","ScrollResolver.updateScrollState","mergeMap","of"],"mappings":"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"}